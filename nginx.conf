server {
    listen 80;
    server_name ezrix.lol;
    root /var/www/html;
    index index.php;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        fastcgi_pass wordpress:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        access_log off;
        log_not_found off;
        expires 30d;
    }

    location /memcached_status {
        access_log off;
        allow 127.0.0.1;
        deny all;
        default_type text/plain;
        set $memcached_key $arg_key;
        set $memcached_stats "memcached_stats";
        content_by_lua_block {
            local function format_stats(stats)
                local result = ""
                for k, v in pairs(stats) do
                    result = result..k..":"..v.."\n"
                end
                return result
            end
            local cache = ngx.shared.$memcached_stats
            local stats = cache:get($memcached_key)
            if not stats then
                local memcached = require "resty.memcached"
                local memc, err = memcached:new()
                if not memc then
                    ngx.say("failed to instantiate memc: ", err)
                    return
                end
                memc:set_timeout(1000)
                local ok, err = memc:connect("127.0.0.1", 11211)
                if not ok then
                    ngx.say("failed to connect: ", err)
                    return
                end
                stats, err = memc:get_stats()
                if not stats then
                    ngx.say("failed to get stats: ", err)
                    return
                end
                cache:set($memcached_key, stats, 10)
            end
            ngx.say(format_stats(stats))
        }
    }

    location /redis_status {
        access_log off;
        allow 127.0.0.1;
        deny all;
        default_type text/plain;
        set $redis_stats "redis_stats";
        content_by_lua_block {
            local function format_stats(stats)
                local result = ""
                for k, v in pairs(stats) do
                    result = result..k..":"..v.."\n"
                end
                return result
            end
            local cache = ngx.shared.$redis_stats
            local stats = cache:get(1)
            if not stats then
                local redis = require "resty.redis"
                local red = redis:new()
                red:set_timeout(1000)
                local ok, err = red:connect("127.0.0.1", 6379)
                if not ok then
                    ngx.say("failed to connect: ", err)
                    return
                end
                stats, err = red:info()
                if not stats then
                    ngx.say("failed to get stats: ", err)
                    return
                end
                cache:set(1, stats, 10)
            end
            ngx.say(format_stats(stats))
        }
    }
}
